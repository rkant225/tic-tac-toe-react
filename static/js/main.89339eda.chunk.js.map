{"version":3,"sources":["Components/Block/Block.js","Components/Board/Board.js","Components/UtilityUI/SnowFall/SnowFall.js","Components/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Block","props","boardData","updateBoardData","position","className","onClick","Board","SnowFall","reset","getRandomHexColor","Math","floor","random","toString","style","color","bottom","right","Game","useState","isXTurn","updateIsXTurn","winner","updateWinner","decideWinner","useCallback","useEffect","display","justifyContent","alignItems","width","marginBottom","flexWrap","console","log","updatedBoardData","value","border","padding","marginTop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAWeA,EATD,SAACC,GACX,IAAOC,EAAwCD,EAAxCC,UAAWC,EAA6BF,EAA7BE,gBAAiBC,EAAYH,EAAZG,SACnC,OACI,qBAAKC,UAAU,QAAQC,QAAS,WAAKH,EAAgBC,IAArD,SACKF,EAAUE,MCqBRG,EAxBD,SAACN,GACX,IAAOC,EAA8BD,EAA9BC,UAAWC,EAAmBF,EAAnBE,gBAElB,OACI,gCACI,sBAAKE,UAAU,MAAf,UACI,cAAC,EAAD,CAAOD,SAAU,EAAGF,UAAWA,EAAWC,gBAAiBA,IAC3D,cAAC,EAAD,CAAOC,SAAU,EAAGF,UAAWA,EAAWC,gBAAiBA,IAC3D,cAAC,EAAD,CAAOC,SAAU,EAAGF,UAAWA,EAAWC,gBAAiBA,OAE/D,sBAAKE,UAAU,MAAf,UACI,cAAC,EAAD,CAAOD,SAAU,EAAGF,UAAWA,EAAWC,gBAAiBA,IAC3D,cAAC,EAAD,CAAOC,SAAU,EAAGF,UAAWA,EAAWC,gBAAiBA,IAC3D,cAAC,EAAD,CAAOC,SAAU,EAAGF,UAAWA,EAAWC,gBAAiBA,OAE/D,sBAAKE,UAAU,MAAf,UACI,cAAC,EAAD,CAAOD,SAAU,EAAGF,UAAWA,EAAWC,gBAAiBA,IAC3D,cAAC,EAAD,CAAOC,SAAU,EAAGF,UAAWA,EAAWC,gBAAiBA,IAC3D,cAAC,EAAD,CAAOC,SAAU,EAAGF,UAAWA,EAAWC,gBAAiBA,WC2C5DK,G,MA7DE,SAACP,GACd,IAAOQ,EAASR,EAATQ,MAEDC,EAAoB,WACtB,OAAOC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,KAGvD,OACI,sBAAKR,QAASG,EAAd,UACI,qBAAIJ,UAAU,MAAd,UACI,oBAAIA,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9C,eACA,oBAAIL,UAAU,YAAYU,MAAO,CAACC,MAAK,WAAON,MAA9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","file":"static/js/main.89339eda.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Block = (props) => {\r\n    const {boardData, updateBoardData, position} = props;\r\n    return (\r\n        <div className=\"block\" onClick={()=>{updateBoardData(position)}}>\r\n            {boardData[position]}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Block;\r\n","import React from 'react'\r\nimport Block from '../Block/Block'\r\n\r\nconst Board = (props) => {\r\n    const {boardData, updateBoardData} = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <Block position={0} boardData={boardData} updateBoardData={updateBoardData}/>\r\n                <Block position={1} boardData={boardData} updateBoardData={updateBoardData}/>\r\n                <Block position={2} boardData={boardData} updateBoardData={updateBoardData}/>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Block position={3} boardData={boardData} updateBoardData={updateBoardData}/>\r\n                <Block position={4} boardData={boardData} updateBoardData={updateBoardData}/>\r\n                <Block position={5} boardData={boardData} updateBoardData={updateBoardData}/>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Block position={6} boardData={boardData} updateBoardData={updateBoardData}/>\r\n                <Block position={7} boardData={boardData} updateBoardData={updateBoardData}/>\r\n                <Block position={8} boardData={boardData} updateBoardData={updateBoardData}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react'\r\nimport './SnowFall.css'\r\n\r\nconst SnowFall = (props) => {\r\n    const {reset} = props;\r\n\r\n    const getRandomHexColor = () =>{\r\n        return Math.floor(Math.random()*16777215).toString(16);\r\n    }\r\n\r\n    return (\r\n        <div onClick={reset}>\r\n            <ul className=\"bgg\">\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n                <li className=\"snowflake\" style={{color : `#${getRandomHexColor()}`}}>*</li>\r\n            </ul>\r\n\r\n            <h2 style={{position : 'absolute', bottom : '0', right : '20px',}}>Click anywhere to play again</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SnowFall;\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport Board from '../Board/Board';\r\nimport SnowFall from '../UtilityUI/SnowFall/SnowFall'\r\n\r\nconst Game = (props) => {\r\n    const [isXTurn, updateIsXTurn] = useState(true);\r\n    const [boardData, updateBoardData] = useState({});\r\n    const [winner, updateWinner] = useState(\"\");\r\n\r\n    // Board\r\n    // 0    1   2\r\n    // 3    4   5\r\n    // 6    7   8\r\n\r\n    const decideWinner = useCallback(()=>{\r\n        // X\r\n        if(boardData[0] === 'X' && boardData[1] === 'X' && boardData[2] === 'X'){\r\n            updateWinner('X')\r\n        }\r\n        if(boardData[3] === 'X' && boardData[4] === 'X' && boardData[5] === 'X'){\r\n            updateWinner('X')\r\n        }\r\n        if(boardData[6] === 'X' && boardData[7] === 'X' && boardData[8] === 'X'){\r\n            updateWinner('X')\r\n        }\r\n\r\n        if(boardData[0] === 'X' && boardData[3] === 'X' && boardData[6] === 'X'){\r\n            updateWinner('X')\r\n        }\r\n        if(boardData[1] === 'X' && boardData[4] === 'X' && boardData[7] === 'X'){\r\n            updateWinner('X')\r\n        }\r\n        if(boardData[2] === 'X' && boardData[5] === 'X' && boardData[8] === 'X'){\r\n            updateWinner('X')\r\n        }\r\n\r\n        if(boardData[0] === 'X' && boardData[4] === 'X' && boardData[8] === 'X'){\r\n            updateWinner('X')\r\n        }\r\n        if(boardData[2] === 'X' && boardData[4] === 'X' && boardData[6] === 'X'){\r\n            updateWinner('X')\r\n        }\r\n\r\n        // O\r\n        if(boardData[0] === 'O' && boardData[1] === 'O' && boardData[2] === 'O'){\r\n            updateWinner('O')\r\n        }\r\n        if(boardData[3] === 'O' && boardData[4] === 'O' && boardData[5] === 'O'){\r\n            updateWinner('O')\r\n        }\r\n        if(boardData[6] === 'O' && boardData[7] === 'O' && boardData[8] === 'O'){\r\n            updateWinner('O')\r\n        }\r\n\r\n        if(boardData[0] === 'O' && boardData[3] === 'O' && boardData[6] === 'O'){\r\n            updateWinner('O')\r\n        }\r\n        if(boardData[1] === 'O' && boardData[4] === 'O' && boardData[7] === 'O'){\r\n            updateWinner('O')\r\n        }\r\n        if(boardData[2] === 'O' && boardData[5] === 'O' && boardData[8] === 'O'){\r\n            updateWinner('O')\r\n        }\r\n\r\n        if(boardData[0] === 'O' && boardData[4] === 'O' && boardData[8] === 'O'){\r\n            updateWinner('O')\r\n        }\r\n        if(boardData[2] === 'O' && boardData[4] === 'O' && boardData[6] === 'O'){\r\n            updateWinner('O')\r\n        }\r\n\r\n    }, [boardData])\r\n\r\n    useEffect(()=>{\r\n        decideWinner();\r\n    }, [decideWinner]);\r\n\r\n    const handleBlockClickEvent = (position) =>{\r\n        console.log('Called')\r\n        if(!boardData[position] && !winner){\r\n            const updatedBoardData = {...boardData};\r\n            const value = isXTurn ? 'X' : 'O';\r\n            updatedBoardData[position] = value;\r\n            updateBoardData(updatedBoardData);\r\n            updateIsXTurn(!isXTurn);\r\n        }\r\n    }\r\n\r\n    const reset = () =>{\r\n        updateWinner(\"\");\r\n        updateIsXTurn(true);\r\n        updateBoardData({});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{display : 'flex', justifyContent : 'space-between', alignItems : 'center', width : '100%', marginBottom : '2rem'}}>\r\n                <h1>Tic-Tac-Toe</h1>\r\n                {!winner && <button onClick={reset}>Reset</button>}\r\n            </div>\r\n\r\n            <div style={{display : 'flex',  justifyContent : 'space-around', alignItems : 'center', flexWrap : 'wrap', width : '100%' }}>\r\n                <div>\r\n                    <Board boardData={boardData} updateBoardData={handleBlockClickEvent}/>\r\n                </div>\r\n                { winner && \r\n                    <div>\r\n                        <h1 style={{border : '1px solid white', padding : '1rem', marginTop : '10px'}}>Winner : {winner}</h1>\r\n                    </div>\r\n                }\r\n            </div>\r\n                \r\n            {winner && <SnowFall reset={reset}/>}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Game;\r\n","import './App.css';\nimport Game from './Components/Game/Game';\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}